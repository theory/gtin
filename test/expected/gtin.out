--
-- Tests for the GTIN data type.
--
--
--
-- first, define the datatype.  Turn off echoing so that expected file
-- does not depend on contents of gtin.sql.
--
SET client_min_messages = warning;
\set ECHO none
CREATE TEMP TABLE product (
    gtin    gtin UNIQUE PRIMARY KEY,
    name    text
);
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "product_pkey" for table "product"
-- expect empty GTIN ERROR
insert into product values ('', 'Empty GTIN');
ERROR:  GTIN cannot be empty
-- expect bad characters error
insert into product values ('400763+0000116', 'Invalid Character');
ERROR:  Invalid characters in GTIN "400763+0000116"
-- expect long GTIN error.
insert into product values ('1231231231234007630000116', 'Too Long');
ERROR:  GTIN cannot be more than 18 characters: "1231231231234007630000116"
-- expect invalid checksum ERROR
insert into product values ('4007630000117', 'Invalid Checksum');
ERROR:  Invalid checksum for GTIN "4007630000117"
-- expect PK ERROR
insert into product values ('4007630000116', 'PK');
insert into product values ('4007630000116', 'PK');
ERROR:  duplicate key value violates unique constraint "product_pkey"
-- Expect No errors
insert into product values ('0061414000024',  'Arthur Dent');
insert into product values ('0012345-000065', 'Ford Prefect');
ERROR:  duplicate key value violates unique constraint "product_pkey"
insert into product values ('614141 000418',  'Zaphod Beeblebrox');
insert into product values ('10614141000415', 'Trillian');
ERROR:  duplicate key value violates unique constraint "product_pkey"
insert into product values ('10614141450005', 'Slartibartfast');
ERROR:  duplicate key value violates unique constraint "product_pkey"
insert into product values ('10614141777775', 'Zarniwoop');
ERROR:  duplicate key value violates unique constraint "product_pkey"
insert into product values ('123',            'Milliways');
-- Accessor functions
select gtin, isa_gtin(gtin) from product;
 gtin | isa_gtin 
------+----------
 h    | f
 p    | f
      | f
 123  | t
(4 rows)

-- Expect trues
select isa_gtin('0061414000024'), isa_gtin('00614 1400 0024'),
       isa_gtin('00614-1400-0024');
 isa_gtin | isa_gtin | isa_gtin 
----------+----------+----------
 t        | t        | t
(1 row)

-- Expect false
select isa_gtin('0061414000025'), isa_gtin(''), isa_gtin('12+3'),
       isa_gtin('1231231231234007630000116');
 isa_gtin | isa_gtin | isa_gtin | isa_gtin 
----------+----------+----------+----------
 f        | f        | f        | f
(1 row)

-- Equality tests
select '0061414000024'::gtin = '61414000024'::gtin AS is_same_gtin;
 is_same_gtin 
--------------
 t
(1 row)

select '6141-400 0024'::gtin = '61414000024'::gtin AS is_same_gtin;
 is_same_gtin 
--------------
 t
(1 row)

select name, gtin from product where gtin = '0061414000024';
 name | gtin 
------+------
(0 rows)

select name, gtin from product where gtin = '006 1414-000024';
 name | gtin 
------+------
(0 rows)

select a.gtin, a2.name from product a JOIN product a2 USING (gtin);
 gtin |       name        
------+-------------------
 h    | PK
 p    | Arthur Dent
      | Zaphod Beeblebrox
 123  | Milliways
(4 rows)

select a.gtin, a2.name from product a JOIN product a2 ON (UPPER(a.gtin)::gtin = a2.gtin);
ERROR:  invalid byte sequence for encoding "UTF8": 0x8d
HINT:  This error can also happen if the byte sequence does not match the encoding expected by the server, which is controlled by "client_encoding".
-- Comparison Operators 
-- Casting is implicit.
select '123'::gtin   <  '130' AS lt;
 lt 
----
 f
(1 row)

select '123'::gtin   <= '130' AS le1;
 le1 
-----
 t
(1 row)

select '123'::gtin   <= '123' AS le2;
 le2 
-----
 t
(1 row)

select '00123'::gtin <= '130' AS le3;
 le3 
-----
 t
(1 row)

select '130'::gtin   >  '123' AS gt;
 gt 
----
 f
(1 row)

select '130'::gtin   >= '123' AS ge1;
 ge1 
-----
 t
(1 row)

select '130'::gtin   >= '130' AS ge2;
 ge2 
-----
 t
(1 row)

select '00130'::gtin >= '130' AS ge3;
 ge3 
-----
 t
(1 row)

select gtin from product where gtin <= '61414000024';
 gtin 
------
(0 rows)

select gtin from product where gtin >= '0061414000024';
 gtin 
------
 h
 p
 
 123
(4 rows)

-- LIKE 
-- Implicitly casts values
select name, gtin from product where gtin like '106%'; 
 name | gtin 
------+------
(0 rows)

select name, gtin from product where gtin ilike '106%'; 
ERROR:  invalid byte sequence for encoding "UTF8": 0x8d
HINT:  This error can also happen if the byte sequence does not match the encoding expected by the server, which is controlled by "client_encoding".
select name, gtin from product where gtin ~~ '106%';
 name | gtin 
------+------
(0 rows)

-- select true where constant like constant works
select true where '0061414000024'::gtin like '614%';
 bool 
------
(0 rows)

select true where '0061414000024'::gtin ilike '614%';
ERROR:  invalid byte sequence for encoding "UTF8": 0xb0
HINT:  This error can also happen if the byte sequence does not match the encoding expected by the server, which is controlled by "client_encoding".
select true where '0061414000024'::gtin ~~ '614%';
 bool 
------
(0 rows)

-- Regular Expressions.
-- Implicitly casts values
select name, gtin from product where gtin ~ '^106'; 
 name | gtin 
------+------
(0 rows)

select name, gtin from product where gtin ~* '^106'; 
 name | gtin 
------+------
(0 rows)

-- select true where constant ~ constant works
select true where '0061414000024'::gtin ~ '^614';
 bool 
------
(0 rows)

select true where '0061414000024'::gtin ~* '^614';
 bool 
------
(0 rows)

-- ORDER BY ASC:
select * from product order by gtin;
 gtin |       name        
------+-------------------
 123  | Milliways
 h    | PK
 p    | Arthur Dent
      | Zaphod Beeblebrox
(4 rows)

select * from product order by gtin ASC;
 gtin |       name        
------+-------------------
 123  | Milliways
 h    | PK
 p    | Arthur Dent
      | Zaphod Beeblebrox
(4 rows)

-- ORDER BY DESC:
select * from product order by gtin DESC;
 gtin |       name        
------+-------------------
      | Zaphod Beeblebrox
 p    | Arthur Dent
 h    | PK
 123  | Milliways
(4 rows)

-- FORMATTING
select to_char('123'::gtin, '999')    = '123';
 ?column? 
----------
 f
(1 row)

select to_char('123'::gtin, '99999')  = '  123';
 ?column? 
----------
 t
(1 row)

select to_char('123'::gtin, '99-9')   = '12-3';
 ?column? 
----------
 f
(1 row)

select to_char('123'::gtin, '999-99') = '  1-23';
 ?column? 
----------
 t
(1 row)

select to_char('123'::gtin, '000')    = '123';
 ?column? 
----------
 f
(1 row)

select to_char('123'::gtin, '00000')  = '00123';
 ?column? 
----------
 t
(1 row)

select to_char('123'::gtin, '00-0')   = '12-3';
 ?column? 
----------
 f
(1 row)

select to_char('123'::gtin, '000-00') = '001-23';
 ?column? 
----------
 t
(1 row)

